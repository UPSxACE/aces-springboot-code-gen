@startuml
!theme toy
title Generate code from SQL

SqlToCodeRequest o-- Controller
Controller -right-> ParserService
GeneratedCodeDto o-- ParserService
TableRelationshipGraph o-- ParserService
TableNode *-- TableRelationshipGraph
ColumnNode *-- TableNode
ColumnType *-- ColumnNode
CodeGenerator o-- ParserService
GeneratedCode o-- CodeGenerator
TableRelationshipGraph --- SqlParser
SqlStatementParser *-- SqlParser

class Controller {
+ GeneratedCodeDto : sqlToCode(SqlToCodeRequest request)
  }

class SqlToCodeRequest {
- String : sql
  }

class ParserService {
+ GeneratedCodeDto : parseSql(SqlToCodeRequest request)
  }

class TableRelationshipGraph {
- List<TableNode> : tableNodes
+ {static} TableRelationshipGraph : fromSql(SqlToCodeRequest request)
  }

class TableNode {
- String : tableName
- List<ColumnNode> : columnNodes
  }

class ColumnNode {
- String : columnName
- ColumnType : columnType
- bool : isId
  }

class CodeGenerator{
+ {static} List<GeneratedCode> : generateCodeFromGraph(TableRelationshipGraph graph)
}

class SqlParser {
+ {static} List<TableNode> : parse(String sqlText)
}

class SqlStatementParser {
+ {static} List<TableNode> : parseStatements(List<String> rawStatements)
}

enum ColumnType {
/'
BIGINT,
BIGSERIAL,
BIT,
VARBIT,
BOOL,
CHAR,
VARCHAR,
DATE,
DOUBLE,
INTEGER,
MONEY,
NUMERIC,
REAL,
SMALLINT,
SMALLSERIAL,
SERIAL,
TEXT,
TIME,
TIMETZ,
TIMESTAMP,
TIMESTAMPTZ,
UUID
'/
VARCHAR,
INT,
UUID,
...
}

class GeneratedCodeDto {
- List<GeneratedCode> : code
  }

class GeneratedCode {
- String : entity
- String : repository
  }


@enduml